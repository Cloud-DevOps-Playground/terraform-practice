name: PR validation for Terraform configuration changes

on:
  # push:
  #   branches-ignore: [ "main" ]
  pull_request:
    branches: ["main"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  define-matrix:
    runs-on: ubuntu-latest

    outputs:
      tf-modules: ${{ steps.tf-modules.outputs.tf-modules }}

    steps:
      - name: Define tf-modules
        id: tf-modules
        run: echo 'tf-modules=["ec2_ipv4", "ec2_ipv6", "iam", "key_management", "s3", "vpc"]' >> "$GITHUB_OUTPUT"

      # - run: echo ${{ steps.tf-modules.outputs.tf-modules }}

  tf-module-validation:
    needs: [define-matrix]

    strategy:
      matrix:
        tf-module: ${{ fromJSON(needs.define-matrix.outputs.tf-modules) }}

    uses: ./.github/workflows/terraform_validator.yml
    with:
      workdir: ${{ matrix.tf-module }}

  pr-update-for-module:
    # if: github.event_name == 'pull_request' && needs.tf-module-validation.outputs.init_outcome != 'skipped'
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs:
      - define-matrix
      - tf-module-validation
    strategy:
      matrix:
        tf-module: ${{ fromJSON(needs.define-matrix.outputs.tf-modules) }}

    steps:
      - name: Comment on PR for ${{ matrix.tf-module }} changes
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PR_UPDATE_TOKEN }}
          script: |
            const output = `
            <details>
            <summary>Validation Output for ${{ matrix.tf-module }} related changes</summary>
            <p>#### Terraform Initialization ‚öôÔ∏è\`${{ needs.tf-module-validation.outputs.init_outcome }}\`</p>
            <p>#### Terraform Format and Style üñå\`${{ needs.tf-module-validation.outputs.fmt_outcome }}\`</p>
            <p>#### Terraform Validation ü§ñ\`${{ needs.tf-module-validation.outputs.validate_outcome }}\`</p>
            </details>

            *Pusher: @${{ github.actor }},
            Action: \`${{ github.event_name }}\`,
            Workflow: \`${{ github.workflow }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
